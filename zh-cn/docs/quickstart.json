{
  "filename": "quickstart.md",
  "__html": "<h1>Dragonfly 快速入门</h1>\n<p>快速入门文档旨在帮助您快速上手 Dragonfly，即使在完全不了解 Dragonfly 的情况下也能完成最精简的体验。</p>\n<p>如需在生产环境使用 Dragonfly 完成生产级别的镜像与文件分发，请参考 supernode 和 dfget 的详细生产级别配置参数。</p>\n<h2>前提条件</h2>\n<p>本文档所有操作步骤均使用 docker 容器在同一台机器上完成，所以请确保您的机器上已经安装并启动 docker 容器引擎。您也可以参考文档：<a href=\"userguide/multi_machines_deployment.md\">多机部署</a> 来体验 Dragonfly。</p>\n<h2>步骤 1：部署 Dragonfly 服务端（Supernode）</h2>\n<pre><code class=\"language-bash\">docker run -d --name supernode --restart=always -p 8001:8001 -p 8002:8002 \\\n    dragonflyoss/supernode:0.3.1 -Dsupernode.advertiseIp=127.0.0.1\n</code></pre>\n<blockquote>\n<p><strong>注意</strong>：<code>supernode.advertiseIp</code>必须是客户端能够连通的ip，<code>127.0.0.1</code>仅在服务端和客户端同机情况下才可使用。</p>\n</blockquote>\n<h2>步骤 2：部署 Dragonfly 客户端</h2>\n<pre><code class=\"language-bash\">docker run -d --name dfclient -p 65001:65001 dragonflyoss/dfclient:0.3.1 --registry https://index.docker.io\n</code></pre>\n<blockquote>\n<p><strong>提示</strong>：<code>--registry</code>参数指定镜像仓库地址，<code>https://index.docker.io</code>为官方镜像仓库，您也可以设置为其他仓库地址。</p>\n</blockquote>\n<h2>步骤 3：修改 Docker Daemon 配置</h2>\n<p>我们需要修改 Docker Daemon 配置，通过 mirror 方式来使用 Dragonfly 进行镜像的拉取。</p>\n<p>在配置文件 <code>/etc/docker/daemon.json</code> 中添加或更新如下配置项：</p>\n<pre><code class=\"language-json\">{\n  <span class=\"hljs-attr\">\"registry-mirrors\"</span>: [<span class=\"hljs-string\">\"http://127.0.0.1:65001\"</span>]\n}\n</code></pre>\n<p>重启 Docker Daemon。</p>\n<pre><code class=\"language-bash\">systemctl restart docker\n</code></pre>\n<blockquote>\n<p><strong>提示</strong>：如需进一步了解 <code>/etc/docker/daemon.json</code>，请参考 <a href=\"https://docs.docker.com/registry/recipes/mirror/#configure-the-cache\">Docker 文档</a>。</p>\n</blockquote>\n<h2>步骤 4：拉取镜像</h2>\n<p>通过以上步骤我们即完成了 Dragonfly 服务端与客户端的部署，并且设置了 Docker Daemon 通过 Dragonfly 来拉取官方镜像。</p>\n<p>您可以如平时一样来拉取镜像，例如：</p>\n<pre><code class=\"language-bash\">docker pull nginx:latest\n</code></pre>\n<h2>步骤 5：验证</h2>\n<p>您可以通过执行以下命令，检验 nginx 镜像是否通过 Dragonfly 来传输完成。</p>\n<pre><code class=\"language-bash\">docker <span class=\"hljs-built_in\">exec</span> dfclient grep <span class=\"hljs-string\">'downloading piece'</span> /root/.small-dragonfly/logs/dfclient.log\n</code></pre>\n<p>如果以上命令有诸如</p>\n<pre><code>2019-03-29 15:49:53.913 INFO sign:96027-1553845785.119 : downloading piece:{&quot;taskID&quot;:&quot;00a0503ea12457638ebbef5d0bfae51f9e8e0a0a349312c211f26f53beb93cdc&quot;,&quot;superNode&quot;:&quot;127.0.0.1&quot;,&quot;dstCid&quot;:&quot;127.0.0.1-95953-1553845720.488&quot;,&quot;range&quot;:&quot;67108864-71303167&quot;,&quot;result&quot;:503,&quot;status&quot;:701,&quot;pieceSize&quot;:4194304,&quot;pieceNum&quot;:16}\n</code></pre>\n<p>则说明镜像下载通过 Dragonfly 来完成了。</p>\n<h2>相关文档</h2>\n<ul>\n<li><a href=\"userguide/multi_machines_deployment.md\">多机部署</a></li>\n<li><a href=\"userguide/install_server.md\">安装服务端</a></li>\n<li><a href=\"userguide/install_client.md\">安装客户端</a></li>\n<li><a href=\"userguide/download_files.md\">下载文件</a></li>\n<li><a href=\"userguide/supernode_configuration.md\">SuperNode 配置</a></li>\n<li><a href=\"cli_ref/dfget.md\">Dfget</a></li>\n<li><a href=\"cli_ref/dfdaemon.md\">Dfdameon</a></li>\n</ul>\n",
  "link": "/zh-cn/docs/quickstart.html",
  "meta": {}
}