{
  "filename": "d7y-private-registry.md",
  "__html": "<h1>阿里Dragonfly体验之私有registry下载(基于0.3.0)</h1>\n<p align='right'>by <a href=\"https://github.com/anjia0532\">anjia0532</a></p>\n<p>书接上篇<a href=\"https://juejin.im/post/5c98a8e9f265da60e346fe04\"> 012-P2P加速Docker镜像分发(阿里Dragonfly)</a> ,讲解了如何快速搭建Dragonfly,但是访问的是公开镜像，本文主要讲解如何下载私有镜像。</p>\n<!-- more -->\n<p><a name=\"12267079\"></a></p>\n<h2>实验环境</h2>\n<p><a name=\"65227369\"></a></p>\n<h3>主机</h3>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>主机名</th>\n<th>系统</th>\n<th>ip</th>\n<th>docker version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>supernode</td>\n<td>d7y-1</td>\n<td>Ubuntu Server 16.04.6 LTS X64</td>\n<td>192.168.0.75</td>\n<td>17.06.2ubuntu</td>\n</tr>\n<tr>\n<td>clinet1</td>\n<td>d7y-2</td>\n<td>Ubuntu Server 16.04.6 LTS X64</td>\n<td>192.168.0.76</td>\n<td>17.06.2ubuntu</td>\n</tr>\n<tr>\n<td>clinet2</td>\n<td>d7y-3</td>\n<td>Ubuntu Server 16.04.6 LTS X64</td>\n<td>192.168.0.77</td>\n<td>17.06.2ubuntu</td>\n</tr>\n</tbody>\n</table>\n<p><a name=\"592cc647\"></a></p>\n<h3>私有registry</h3>\n<p>本次以<a href=\"https://cr.console.aliyun.com/cn-qingdao/instances/repositories\">阿里云私有镜像库</a>为例，可以自行开通。</p>\n<p><a name=\"c40e1e5e\"></a></p>\n<h3>文档之坑</h3>\n<p>官方文档比较简单,甚至带有误导性，下意识的以为应该在dfdaemon节点上配置auth信息，并且配的是真实的私有registry，如果真这么搞了，肯定被坑。（但是也能解释通，比较绕，dfdaemon本身就是一个伪装成registry，用来加速私有registry，那么登陆信息就应该换成dfdaemon ip，只是示例不太恰当而已，对初学者相当不友好倒是真的）<br /><img src=\"https://user-gold-cdn.xitu.io/2019/3/30/169cc9884d2539d1?w=922&amp;h=546&amp;f=png&amp;s=67579\" alt=\"image.png\"></p>\n<p><a name=\"494e38bf\"></a></p>\n<h2>supernode步骤</h2>\n<p><a name=\"71e91348\"></a></p>\n<h3>安装supernode</h3>\n<pre><code class=\"language-bash\">root@d7y-1:~<span class=\"hljs-comment\"># docker run --name dragonfly-supernode --restart=always \\</span>\n              -d -p 8001:8001 -p 8002:8002 -v /data/dragonfly/supernode:/home/admin/supernode \\\n              registry.cn-hangzhou.aliyuncs.com/dragonflyoss/supernode:0.3.0 \\\n              -Dsupernode.advertiseIp=192.168.0.75\n\nroot@d7y-1:~<span class=\"hljs-comment\"># docker ps</span>\nCONTAINER ID        IMAGE                                                            COMMAND                  CREATED              STATUS              PORTS                              NAMES\nbe7fb931db0b        registry.cn-hangzhou.aliyuncs.com/dragonflyoss/supernode:0.3.0   <span class=\"hljs-string\">\"/bin/sh -c '/root...\"</span>   About a minute ago   Up About a minute   0.0.0.0:8001-8002-&gt;8001-8002/tcp   dragonfly-supernode\n\nroot@d7y-1:/data/dragonfly/supernode/logs<span class=\"hljs-comment\"># cat app.log </span>\n2019-03-30 01:04:40.065 INFO  [      main] c.d.d.s.SuperNodeStarter       - Starting SuperNodeStarter on be7fb931db0b with PID 9 (/supernode.jar started by root <span class=\"hljs-keyword\">in</span> /)\n2019-03-30 01:04:40.069 INFO  [      main] c.d.d.s.SuperNodeStarter       - No active profile <span class=\"hljs-built_in\">set</span>, falling back to default profiles: default\n2019-03-30 01:04:42.151 INFO  [      main] c.d.d.s.c.SupernodeProperties  - init <span class=\"hljs-built_in\">local</span> ip of supernode, use ip:192.168.0.75\n2019-03-30 01:04:42.253 INFO  [      main] c.d.d.s.c.SupernodeProperties  - cluster members: [{<span class=\"hljs-string\">\"downloadPort\"</span>:8001,<span class=\"hljs-string\">\"ip\"</span>:<span class=\"hljs-string\">\"localhost\"</span>,<span class=\"hljs-string\">\"registerPort\"</span>:8002}]\n2019-03-30 01:04:42.263 INFO  [      main] c.d.d.s.c.util.MonitorService  - available processors count is 4\n2019-03-30 01:04:42.272 ERROR [  Thread-2] c.d.d.s.c.util.MonitorService  - process fields:null error\njava.io.IOException: Cannot run program <span class=\"hljs-string\">\"tsar\"</span>: error=2, No such file or directory\n\tat java.lang.ProcessBuilder.start(ProcessBuilder.java:1048)\n\tat java.lang.Runtime.exec(Runtime.java:620)\n\tat java.lang.Runtime.exec(Runtime.java:450)\n\tat java.lang.Runtime.exec(Runtime.java:347)\n\tat com.dragonflyoss.dragonfly.supernode.common.util.MonitorService<span class=\"hljs-variable\">$1</span>.run(MonitorService.java:56)\n\tat java.lang.Thread.run(Thread.java:748)\nCaused by: java.io.IOException: error=2, No such file or directory\n\tat java.lang.UNIXProcess.forkAndExec(Native Method)\n\tat java.lang.UNIXProcess.&lt;init&gt;(UNIXProcess.java:247)\n\tat java.lang.ProcessImpl.start(ProcessImpl.java:134)\n\tat java.lang.ProcessBuilder.start(ProcessBuilder.java:1029)\n\t... 5 common frames omitted\n2019-03-30 01:04:43.507 INFO  [      main] c.d.d.s.SuperNodeStarter       - Started SuperNodeStarter <span class=\"hljs-keyword\">in</span> 3.906 seconds (JVM running <span class=\"hljs-keyword\">for</span> 4.59)\n2019-03-30 01:04:49.472 INFO  [  spring-1] c.d.d.s.s.p.PreheatServiceImpl - deleteExpiresPreheatTask, count:0\n</code></pre>\n<p>从 <code>2019-03-30 01:04:42.151 INFO  [      main] c.d.d.s.c.SupernodeProperties  - init local ip of supernode, use ip:192.168.0.75</code>  看，启动ip设置成功.</p>\n<p>注意，官方的镜像没改时区，默认是UTC时间，比北京东八区早8小时。</p>\n<p><a name=\"2537d15e\"></a></p>\n<h3>登陆私有registry并推送镜像</h3>\n<pre><code class=\"language-bash\">root@d7y-1:~<span class=\"hljs-comment\"># docker login https://registry.cn-qingdao.aliyuncs.com </span>\nUsername: //你阿里云账号\nPassword: //你阿里云密码\nLogin Succeeded\nroot@d7y-1:~<span class=\"hljs-comment\"># docker pull nginx:alpine</span>\nroot@d7y-1:~<span class=\"hljs-comment\"># docker tag nginx:alpine registry.cn-qingdao.aliyuncs.com/d7y-test/nginx:alpine</span>\nroot@d7y-1:~<span class=\"hljs-comment\"># docker push registry.cn-qingdao.aliyuncs.com/d7y-test/nginx:alpine</span>\nalpine: digest: sha256:857e6f195df0e9b497be0c7fad0f013126407aaeb71edcef66a24e8b990d94b3 size: 1153\n</code></pre>\n<p><a name=\"5b37fed5\"></a></p>\n<h2>dfdaemon 步骤</h2>\n<p><a name=\"fe0b02fa\"></a></p>\n<h3>安装dfdaemon</h3>\n<p>在两台client节点分别执行如下命令</p>\n<pre><code class=\"language-bash\">root@d7y-2:~<span class=\"hljs-comment\"># cat &lt;&lt;EOD &gt;/etc/dragonfly.conf</span>\n[node]\naddress=192.168.0.75\nEOD\nroot@d7y-2:~<span class=\"hljs-comment\"># docker run --name dragonfly-dfclient --restart=always \\</span>\n\t\t\t\t\t\t-d -p 65001:65001 -v /root/.small-dragonfly:/root/.small-dragonfly \\\n            -v /etc/dragonfly.conf:/etc/dragonfly.conf dragonflyoss/dfclient:v0.3.0 \\\n            --registry=https://registry.cn-qingdao.aliyuncs.com  --ratelimit 100M\nUnable to find image <span class=\"hljs-string\">'dragonflyoss/dfclient:v0.3.0'</span> locally\nv0.3.0: Pulling from dragonflyoss/dfclient\n169185f82c45: Pull complete \nf58f64214283: Pull complete \nbd8f062dc2d2: Pull complete \nDigest: sha256:5bcabd5b34f4da0c2d489c8f99a23a401fb9ec57e54d4fa90457a93c5a85371f\nStatus: Downloaded newer image <span class=\"hljs-keyword\">for</span> dragonflyoss/dfclient:v0.3.0\nb491e90489a584119b82ca934cf2ae087abc136f7f9de3542e14fb12bc1c7512\n\nroot@d7y-2:~<span class=\"hljs-comment\"># cat &lt;&lt;EOD &gt;/etc/docker/daemon.json</span>\n{\n<span class=\"hljs-string\">\"registry-mirrors\"</span>: [<span class=\"hljs-string\">\"http://127.0.0.1:65001\"</span>]\n}\nEOD\nroot@d7y-2:~<span class=\"hljs-comment\"># systemctl restart docker </span>\n\nroot@d7y-2:~<span class=\"hljs-comment\"># docker ps</span>\nCONTAINER ID        IMAGE                          COMMAND                  CREATED             STATUS              PORTS                      NAMES\nb491e90489a5        dragonflyoss/dfclient:v0.3.0   <span class=\"hljs-string\">\"/dfclient/dfdaemo...\"</span>   28 seconds ago      Up 4 seconds        0.0.0.0:65001-&gt;65001/tcp   dragonfly-dfclient\n\nroot@d7y-2:~/.small-dragonfly/logs<span class=\"hljs-comment\"># cat dfdaemon.log</span>\n2019-03-30 01:18:21.331 INFO sign:1 : init...\n2019-03-30 01:18:21.331 INFO sign:1 : rotate <span class=\"hljs-built_in\">log</span> routine start...\n2019-03-30 01:18:21.338 INFO sign:1 : dfget version:\n2019-03-30 01:18:21.338 ERRO sign:1 : init properties failed:open /etc/dragonfly/dfdaemon.yml: no such file or directory\n2019-03-30 01:18:21.338 INFO sign:1 : init properties:{<span class=\"hljs-string\">\"Registries\"</span>:[{<span class=\"hljs-string\">\"Schema\"</span>:<span class=\"hljs-string\">\"https\"</span>,<span class=\"hljs-string\">\"Host\"</span>:<span class=\"hljs-string\">\"registry.cn-qingdao.aliyuncs.com\"</span>,<span class=\"hljs-string\">\"Certs\"</span>:null,<span class=\"hljs-string\">\"Regx\"</span>:<span class=\"hljs-string\">\"(^localhost$)|(^127.0.0.1$)|(^127.0.0.1$)\"</span>}]}\n2019-03-30 01:18:21.338 INFO sign:1 : init finish\n2019-03-30 01:18:21.338 INFO sign:1 : start dfdaemon param: &amp;{DfPath:/dfclient/dfget DFRepo:/root/.small-dragonfly/dfdaemon/data/ RateLimit:100M CallSystem:com_ops_dragonfly URLFilter:Signature&amp;Expires&amp;OSSAccessKeyId Notbs:<span class=\"hljs-literal\">true</span> MaxProcs:4 Version:<span class=\"hljs-literal\">false</span> Verbose:<span class=\"hljs-literal\">false</span> HostIP:127.0.0.1 Port:65001 Registry:https://registry.cn-qingdao.aliyuncs.com DownRule: CertFile: KeyFile: TrustHosts:[] ConfigPath:/etc/dragonfly/dfdaemon.yml}\n2019-03-30 01:18:21.338 INFO sign:1 : launch dfdaemon http server on 127.0.0.1:65001\n</code></pre>\n<p><a name=\"414f9e5b\"></a></p>\n<h3>登陆dfdaemon</h3>\n<pre><code class=\"language-bash\">root@d7y-2:~<span class=\"hljs-comment\"># docker login http://127.0.0.1:65001</span>\nUsername: //你阿里云账号\nPassword: //你阿里云密码\nLogin Succeeded\nroot@d7y-2:~<span class=\"hljs-comment\"># cat ~/.docker/config.json </span>\n{\n\t<span class=\"hljs-string\">\"auths\"</span>: {\n\t\t<span class=\"hljs-string\">\"127.0.0.1:65001\"</span>: {\n\t\t\t<span class=\"hljs-string\">\"auth\"</span>: <span class=\"hljs-string\">\"zzxxxxxx=\"</span>\n\t\t}\n\t}\n}\n\n</code></pre>\n<p><a name=\"c6e04966\"></a></p>\n<h3>pull 私有镜像</h3>\n<pre><code class=\"language-bash\">root@d7y-2:~<span class=\"hljs-comment\"># docker pull 127.0.0.1:65001/d7y-test/nginx:alpine</span>\nalpine: Pulling from d7y-test/nginx\n8e402f1a9c57: Pull complete \n56b0d9b69cc9: Pull complete \nb66c8bb200cc: Pull complete \n4ec77fc9c55f: Pull complete \nDigest: sha256:857e6f195df0e9b497be0c7fad0f013126407aaeb71edcef66a24e8b990d94b3\nStatus: Downloaded newer image <span class=\"hljs-keyword\">for</span> 127.0.0.1:65001/d7y-test/nginx:alpine\n</code></pre>\n<p>可以通过iftop 等命令，观察流量。</p>\n<p><a name=\"0d98c747\"></a></p>\n<h2>其他</h2>\n<p><a name=\"21b8fa6d\"></a></p>\n<h3>排错</h3>\n<p>如果有遇到其他问题，可以通过查看日志来获取更多信息。<br />dfdaemon log : /root/.small-dragonfly/logs/{dfclient.log,dfdaemon.log,dfserver.log}<br />supernode log: /home/admin/supernode/{app.log,data-gc.log,downloader.log,piece-hit.log,space-gc.log}</p>\n<p><a name=\"269346af\"></a></p>\n<h3>公开和私有registry混用</h3>\n<p>如果大量都是私有registry的话，可以在/etc/docker/daemon.json 中配置dfdaemon和加速器，如果是一半一半的话，那就干脆起两个dfdaemon就行了，一个--registry写私有的，一个--registry写公有的，然后也是配置 /etc/docker/daemon.json</p>\n<pre><code class=\"language-bash\">cat /etc/docker/daemon.json \n{\n  <span class=\"hljs-string\">\"registry-mirrors\"</span>: [<span class=\"hljs-string\">\"http://127.0.0.1:65001\"</span>,<span class=\"hljs-string\">\"https://xxx.mirror.aliyuncs.com\"</span>],\n  <span class=\"hljs-string\">\"dns\"</span>: [<span class=\"hljs-string\">\"223.5.5.5\"</span>]\n}\n</code></pre>\n<p><a name=\"1075cc79\"></a></p>\n<h3>吐槽</h3>\n<p>再次吐槽一下d7y的产品很好，解决了很大问题。但是这文档，真心不是给新手看的。从未见过如此坑多且深的文档。没见过哪家quick start 写的这么复杂。</p>\n<h3>鸣谢</h3>\n<p>非常感谢钉钉群内的 d7y 的 contributor <a href=\"https://github.com/lowzj\">太云-lowzj</a> 耐心解答，从开始研究d7y开始，遇到的很多坑都是在   <a href=\"https://github.com/lowzj\">太云-lowzj</a> 帮助下蹚过去的。但是还是觉得，如果文档足够友好，肯定会减少群内被打扰的次数，进而节省自己时间的。<br />\n<img src=\"https://user-gold-cdn.xitu.io/2019/3/30/169cca03f3465da0?w=436&amp;h=153&amp;f=png&amp;s=12860\" alt=\"image.png\"></p>\n<p><a name=\"fb674066\"></a></p>\n<h2>招聘小广告</h2>\n<p>山东济南的小伙伴欢迎投简历啊 <a href=\"https://www.shunnengnet.com/index.php/Home/Contact/join.html\">加入我们</a> , 一起搞事情。</p>\n<p>长期招聘，Java程序员，大数据工程师，运维工程师，前端工程师。</p>\n",
  "link": "/zh-cn/blog/d7y-private-registry.html",
  "meta": {
    "hidden": "false",
    "title": "阿里Dragonfly体验之私有registry下载(基于0.3.0)",
    "keywords": "docker, dragonfly",
    "description": "本文介绍如何在docker上部署Dragonfly，包括supernode，dfdaemon，dfget。",
    "author": "anjia0532",
    "date": "2019-03-30"
  }
}