{
  "filename": "d7y-dfdaemon.md",
  "__html": "<h1>使用Dragonfly加速Docker镜像分发(基于0.3.0)</h1>\n<p align='right'>by <a href=\"https://github.com/anjia0532\">anjia0532</a></p>\n<h2>介绍</h2>\n<p>如果说，微服务和容器是最佳拍档，那么模块多实例是肯定少不了。<br />假如没有使用类似 <a href=\"https://github.com/GoogleContainerTools/jib\">Google jib</a> 等手段进行镜像分层（利用镜像缓存），势必会造成</p>\n<ul>\n<li>带宽浪费：尤其是公网带宽，如果是自建harbor，那么会容易导致单节点网卡被打满，如果用了harbor联邦，又会导致数据同步等运维问题。</li>\n<li>集群拉起慢：镜像下载慢，必然会导致服务拉起慢。</li>\n</ul>\n<p>关于Google jib可以参见我另外一篇 <a href=\"https://juejin.im/post/5c60c021f265da2dd37bf85b\">加速和简化构建Docker(基于Google jib)</a> ，本文只介绍 Dragonfly + dfdaemon</p>\n<p>Dragonfly是阿里巴巴自研并开源的一款基于P2P协议的文件分发系统。除了使用 dfget 进行文件下载外，还支持dfdaemon 进行docker镜像下载。</p>\n<p>关于Dragonfly的镜像分发的原理性说明，可参见 <a href=\"https://yq.aliyun.com/articles/244897\">直击阿里双11神秘技术：PB级大规模文件分发系统“蜻蜓”</a> ，文中介绍很详细，此处不多说明。</p>\n<!-- more -->\n<p><a name=\"12267079\"></a></p>\n<h3>实验环境</h3>\n<table>\n<thead>\n<tr>\n<th>类型</th>\n<th>系统</th>\n<th>ip</th>\n<th>docker version</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>supernode</td>\n<td>Ubuntu Server 16.04.6 LTS X64</td>\n<td>192.168.0.44</td>\n<td>17.06.2~ce-0~ubuntu</td>\n</tr>\n<tr>\n<td>clinet1</td>\n<td>Ubuntu Server 16.04.6 LTS X64</td>\n<td>192.168.0.40</td>\n<td>17.06.2~ce-0~ubuntu</td>\n</tr>\n<tr>\n<td>clinet2</td>\n<td>Ubuntu Server 16.04.6 LTS X64</td>\n<td>192.168.0.45</td>\n<td>17.06.2~ce-0~ubuntu</td>\n</tr>\n</tbody>\n</table>\n<p><strong>注意：</strong> <br />如果是实验目的，建议用Vmware，并且在关键操作时备份快照（比如，刚装完环境，升级完PS和.Net后），这样能够及时，干净的还原现场，节省每次重装系统导致的时间浪费</p>\n<p>安装</p>\n<p>吐槽一下Dragonfly的文档，简直让人不知所以。结合issues + 钉钉群内请教，遂整理出最简使用文档。\n<a name=\"supernode\"></a></p>\n<h3>supernode</h3>\n<p>可选：给supernode增加docker加速器，可以参考 <a href=\"https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors\">https://cr.console.aliyun.com/cn-hangzhou/instances/mirrors</a> ，如果不需要，可以去掉。</p>\n<pre><code class=\"language-bash\">$ cat &lt;&lt;EOD &gt;/etc/docker/daemon.json\n{\n<span class=\"hljs-string\">\"registry-mirrors\"</span>: [<span class=\"hljs-string\">\"https://xxxx.mirror.aliyuncs.com\"</span>] \n}\nEOD\n$ systemctl restart docker \n</code></pre>\n<pre><code class=\"language-bash\">$ docker run --name dragonfly-supernode --restart=always -d -p 8001:8001 -p 8002:8002 -v /data/dragonfly/supernode:/home/admin/supernode registry.cn-hangzhou.aliyuncs.com/dragonflyoss/supernode:0.3.0 -Dsupernode.advertiseIp=172.60.20.44\n</code></pre>\n<p><strong>说明：</strong></p>\n<ul>\n<li>--restart=always 在容器退出时，自动重启容器，防止异常kill或者oom导致的异常退出</li>\n<li><a href=\"http://registry.cn-hangzhou.aliyuncs.com/dragonflyoss/supernode:0.3.0\">registry.cn-hangzhou.aliyuncs.com/dragonflyoss/supernode:0.3.0</a> dragonfly的supernode目前没有docker hub镜像，只能用阿里云的</li>\n<li>-v /data/dragonfly/supernode:/home/admin/supernode 将supernode的data dir挂载到宿主机上</li>\n<li>-Dsupernode.advertiseIp=172.60.20.44 设置clinet可以访问的supernode ip,这是一个大坑。如果不设置，有可能会导致client无法连接supernode，届时，docker pull会走clinet的网络，从真实的registry直接下载镜像</li>\n</ul>\n<p><img src=\"https://user-gold-cdn.xitu.io/2019/3/25/169b453c891dbdb1?w=725&amp;h=624&amp;f=png&amp;s=90024\" alt=\"image.png\">\n<a name=\"752efc6a\"></a></p>\n<h3>dfdaemon</h3>\n<pre><code class=\"language-bash\">$ cat &lt;&lt;EOD &gt;/etc/dragonfly.conf\n[node]\naddress=192.168.0.44\nEOD\n$ docker run --name dragonfly-dfclient --restart=always -d -p 65001:65001 -v /root/.small-dragonfly:/root/.small-dragonfly -v /etc/dragonfly.conf:/etc/dragonfly.conf dragonflyoss/dfclient:v0.3.0 --registry=https://xxx.mirror.aliyuncs.com  --ratelimit 100M\n$ cat &lt;&lt;EOD &gt;/etc/docker/daemon.json\n{\n<span class=\"hljs-string\">\"registry-mirrors\"</span>: [<span class=\"hljs-string\">\"http://127.0.0.1:65001\"</span>]\n}\nEOD\n$ systemctl restart docker \n</code></pre>\n<p><strong>说明：</strong></p>\n<ul>\n<li>在 /etc/dragonfly.conf 中配置client可以访问的supernode的ip地址，但是，目前官方没有做HA，supernode没法组集群，撑死算是联邦，不能共享文件信息，而且最坑的是，快速开始里，中英文均未提供需要配置此文件，而是在 <a href=\"https://d7y.io/en-us/docs/userguide/download_files.html\">Downloading Files with Dragonfly</a> 等有所提及（我都是被坑完后，用关键词在d7y的org里搜索，类似知道答案后，找出处 手动[捂脸]）</li>\n<li>-v /root/.small-dragonfly:/root/.small-dragonfly ,将容器中的关键目录挂载到宿主机上，防止重启或者镜像升级时，数据丢失</li>\n<li>--registry=https://xxx.mirror.aliyuncs.com 从何处下载镜像，可以写harbor地址，也可以写加速器地址。默认是 <a href=\"https://index.docker.io\">https://index.docker.io</a> ，但是，因为国内网络原因，会导致大概率性失败。很灵异。而官方文档是写的 <code>--registry https://xxx.xx.x</code> 不能算是坑，但是，对于docker不熟悉的，往往会不知能不能用加速器。</li>\n<li>--ratelimit 100M 是限速，默认是20M ,这肯定不算坑哈，这是正常特性，在  <a href=\"https://d7y.io/zh-cn/docs/quickstart.html\">dfdaemon#Options</a> 有说明，但是，文档是有误的 <code>-ratelimit</code> 而实际是 <code>--ratelimit</code> ,如果不改此参数，会发现，下载很慢。</li>\n<li>修改/etc/docker/daemon.json 是为了让docker engine走 dfdaemon</li>\n<li>systemctl restart docker 是为了让daemon生效</li>\n</ul>\n<p><a name=\"db06c78d\"></a></p>\n<h2>测试</h2>\n<p><a name=\"4a76b96e\"></a></p>\n<h3>大文件测试</h3>\n<pre><code class=\"language-bash\">$ docker pull anjia0532/kubeflow-images-public.tensorflow-1.6.0-notebook-gpu:v20180604-b3733835\n</code></pre>\n<p>可以通过 <code>iftop</code> 等软件，查看带宽使用情况判断是否生效，也可以通过查看日志来判断。<br /><img src=\"https://user-gold-cdn.xitu.io/2019/3/25/169b453c893e4bfd?w=1911&amp;h=821&amp;f=png&amp;s=46951\" alt=\"image.png\"><br />但是会经常性的出现 <code>error pulling image configuration: received unexpected HTTP status: 502 Bad Gateway</code></p>\n<p><a name=\"9415a826\"></a></p>\n<h2>最后</h2>\n<p>需要结合实际情况，配置相关参数，比如，文件失效时间，用来平衡文件有效期及磁盘使用量。\n<a name=\"35808e79\"></a></p>\n<h2>参考资料</h2>\n<ul>\n<li><a href=\"https://yq.aliyun.com/articles/244897\">直击阿里双11神秘技术：PB级大规模文件分发系统“蜻蜓”</a></li>\n<li><a href=\"https://mp.weixin.qq.com/s?__biz=MzUzNzYxNjAzMg==&amp;mid=2247484045&amp;idx=1&amp;sn=2e4586171930b8d3080eadd55be09723\">深度解读阿里巴巴云原生镜像分发系统 Dragonfly</a></li>\n<li><a href=\"https://d7y.io/en-us/docs/quickstart.html\">Dragonfly Quick Start</a></li>\n<li><a href=\"https://juejin.im/post/5c60c021f265da2dd37bf85b\">加速和简化构建Docker(基于Google jib)</a></li>\n<li><a href=\"https://d7y.io/zh-cn/blog/china-mobile-practice.html\">浙江移动容器云基于 Dragonfly 的统一文件分发平台生产实践</a></li>\n</ul>\n<p><a name=\"fb674066\"></a></p>\n<h2>招聘小广告</h2>\n<p>山东济南的小伙伴欢迎投简历啊 <a href=\"https://www.shunnengnet.com/index.php/Home/Contact/join.html\">加入我们</a> , 一起搞事情。</p>\n<p>长期招聘，Java程序员，大数据工程师，运维工程师，前端工程师。</p>\n",
  "link": "/zh-cn/blog/d7y-dfdaemon.html",
  "meta": {
    "hidden": "false",
    "title": "使用Dragonfly加速Docker镜像分发(基于0.3.0)",
    "keywords": "docker, dragonfly",
    "description": "本文介绍如何在docker上部署Dragonfly，包括supernode，dfdaemon，dfget。",
    "author": "anjia0532",
    "date": "2019-03-25"
  }
}